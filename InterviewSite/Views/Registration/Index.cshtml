@model InterviewSite.Models.User

@{
    ViewBag.Title = "Registration";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmRegister" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="interview-inputs">
            <div class="label-container">@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "interview-label" })</div>
            <div class="editor-container">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "interview-input" } })
                <div class="error" id="errorFirstName">@ViewBag.ErrorFirstName</div>
            </div>
        </div>

        <div class="interview-inputs">
            <div class="label-container">@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "interview-label" })</div>
            <div class="editor-container">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "interview-input" } })
                <div class="error" id="errorLastName">@ViewBag.ErrorLastName</div>
            </div>
        </div>

        <div class="interview-inputs">
            <div class="label-container">@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "interview-label" })</div>
            <div class="editor-container">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "interview-input" } })
                <div class="error" id="errorEmail">@ViewBag.ErrorEmail</div>
            </div>
        </div>

        <div class="interview-inputs">
            <div class="label-container">@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "interview-label" })</div>
            <div class="editor-container">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "interview-input" } })
                <div class="error" id="errorPassword">@ViewBag.ErrorPassword</div>
            </div>
        </div>

        <div class="interview-inputs">
            <div class="label-container">@Html.Label("ConfirmPassword","Confirm Password", htmlAttributes: new { @class = "interview-label" })</div>
            <div class="editor-container">
                @Html.Password("ConfirmPassword",null,htmlAttributes:new { @class= "interview-input" })
                <div class="error" id="errorConfirmPassword"></div>
            </div>
        </div>

        <div class="interview-inputs">
            <div class="label-container">@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "interview-label" })</div>
            <div class="editor-container">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "interview-input" } })
            </div>
        </div>

        <div class="interview-inputs">
            <div class="label-container">@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "interview-label" })</div>
            <div class="editor-container">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "interview-input" } })
            </div>
        </div>

        <div class="interview-inputs">
            <div class="label-container">@Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "interview-label" })</div>
            <div class="editor-container">
                @Html.DropDownList("Country", new SelectList(ViewBag.Countries, "id", "CountryName"), htmlAttributes: new { @class = "interview-ddl" })
                <div class="error" id="errorCountry">@ViewBag.ErrorCountry</div>
            </div>
        </div>

        <div class="interview-inputs">
            <input id="btnRegister" type="submit" value="Register" class="interview-btn" style="margin-left:20%;" />
        </div>
    </div>
    
}

@section Styles{
    @Styles.Render("~/css/registration")
}

@section Scripts{
    @Scripts.Render("~/js/registration")
}







   

